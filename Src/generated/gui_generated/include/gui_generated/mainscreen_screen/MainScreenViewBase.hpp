/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINSCREENVIEWBASE_HPP
#define MAINSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/graph/GraphLabels.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/containers/SlideMenu.hpp>
#include <gui/containers/CustomContainer1.hpp>

class MainScreenViewBase : public touchgfx::View<MainScreenPresenter>
{
public:
    MainScreenViewBase();
    virtual ~MainScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void CurrentModeFunc()
    {
        // Override and implement this function in MainScreen
    }

    virtual void VoltageModeFunc()
    {
        // Override and implement this function in MainScreen
    }

    virtual void PowerModeFunc()
    {
        // Override and implement this function in MainScreen
    }

    virtual void SetPointBtnClicked()
    {
        // Override and implement this function in MainScreen
    }

    virtual void ArcLevelBtnClicked()
    {
        // Override and implement this function in MainScreen
    }

    virtual void CcLevelBtnClicked()
    {
        // Override and implement this function in MainScreen
    }

    virtual void CvLevelBtnClicked()
    {
        // Override and implement this function in MainScreen
    }

    virtual void QuanchTimeBtnClicked()
    {
        // Override and implement this function in MainScreen
    }

    virtual void ElapsedTimeBtnClicked()
    {
        // Override and implement this function in MainScreen
    }

    virtual void TimeSetBtnClicked()
    {
        // Override and implement this function in MainScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box Background;
    touchgfx::BoxWithBorder GraphBackground;
    touchgfx::GraphWrapAndClear<1000> MainGraph;
    touchgfx::GraphElementLine MainGraphLine1;
    touchgfx::PainterRGB565 MainGraphLine1Painter;
    touchgfx::GraphElementGridX MainGraphMajorXAxisGrid;
    touchgfx::GraphElementGridY MainGraphMajorYAxisGrid;
    touchgfx::GraphLabelsX MainGraphMajorXAxisLabel;
    touchgfx::GraphLabelsY MainGraphMajorYAxisLabel;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > StartButton;
    touchgfx::TextArea Setpoint;
    touchgfx::TextArea ARCLevel;
    touchgfx::TextArea CCLevel;
    touchgfx::TextArea CVLevel;
    touchgfx::TextArea QuanchTime;
    touchgfx::TextArea StartButtonText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > TimeSetButton;
    touchgfx::TextArea TimeSetText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ElapsedTimeButton;
    touchgfx::TextArea ElapsedTimeText;
    touchgfx::TextArea TimeSet;
    touchgfx::TextArea ElapsedTime;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButton1_2;
    touchgfx::TextArea TimeModeText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > CalibrationPageButton;
    touchgfx::TextArea Sec;
    touchgfx::TextArea Sec_1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > CVLevelButton;
    touchgfx::TextAreaWithOneWildcard CVText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > QuanchTimeButton;
    touchgfx::TextAreaWithOneWildcard QuanchText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > CCLevelButton;
    touchgfx::TextAreaWithOneWildcard CCText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ARCLevelButton;
    touchgfx::TextAreaWithOneWildcard ARCText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > SetpointButton;
    touchgfx::TextAreaWithOneWildcard SetpointText;
    touchgfx::TextArea CalibrationButtonText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > VoltageBox;
    touchgfx::TextArea VoltageText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > CurrentBox;
    touchgfx::TextArea CurrentText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > PowerBox;
    touchgfx::TextArea PowerText;
    touchgfx::TextArea VoltageTitle;
    touchgfx::TextArea CurrentTitle;
    touchgfx::TextArea PowerTitle;
    touchgfx::Circle AcokCircle;
    touchgfx::PainterRGB565 AcokCirclePainter;
    touchgfx::Circle PfcokCircle;
    touchgfx::PainterRGB565 PfcokCirclePainter;
    touchgfx::Circle PfcotpCircle;
    touchgfx::PainterRGB565 PfcotpCirclePainter;
    touchgfx::Circle FbotpCircle;
    touchgfx::PainterRGB565 FbotpCirclePainter;
    touchgfx::Circle HiccupCircle;
    touchgfx::PainterRGB565 HiccupCirclePainter;
    touchgfx::Circle FanCircle;
    touchgfx::PainterRGB565 FanCirclePainter;
    touchgfx::TextArea FanText;
    touchgfx::TextArea HiccupText;
    touchgfx::TextArea FbotpText;
    touchgfx::TextArea PfcotpText;
    touchgfx::TextArea PfcokText;
    touchgfx::TextArea AcokText;
    touchgfx::SlideMenu slideMenu1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > PowermodeButton;
    touchgfx::TextArea PowermodeText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > VoltagemodeButton;
    touchgfx::TextArea VoltagemodeText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > CurrentmodeButton;
    touchgfx::TextArea CurrentmodeText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ModeBox;
    touchgfx::TextArea ModeText;
    CustomContainer1 keypad1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t CVTEXT_SIZE = 6;
    touchgfx::Unicode::UnicodeChar CVTextBuffer[CVTEXT_SIZE];
    static const uint16_t QUANCHTEXT_SIZE = 6;
    touchgfx::Unicode::UnicodeChar QuanchTextBuffer[QUANCHTEXT_SIZE];
    static const uint16_t CCTEXT_SIZE = 6;
    touchgfx::Unicode::UnicodeChar CCTextBuffer[CCTEXT_SIZE];
    static const uint16_t ARCTEXT_SIZE = 6;
    touchgfx::Unicode::UnicodeChar ARCTextBuffer[ARCTEXT_SIZE];
    static const uint16_t SETPOINTTEXT_SIZE = 6;
    touchgfx::Unicode::UnicodeChar SetpointTextBuffer[SETPOINTTEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // MAINSCREENVIEWBASE_HPP
