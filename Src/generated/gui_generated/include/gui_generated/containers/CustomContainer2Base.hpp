/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CUSTOMCONTAINER2BASE_HPP
#define CUSTOMCONTAINER2BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>

class CustomContainer2Base : public touchgfx::Container
{
public:
    CustomContainer2Base();
    virtual ~CustomContainer2Base() {}
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void CalibrationExitBtnClicked()
    {
        // Override and implement this function in CustomContainer2
    }

    virtual void Parameter1BtnClicked()
    {
        // Override and implement this function in CustomContainer2
    }

    virtual void Parameter2BtnClicked()
    {
        // Override and implement this function in CustomContainer2
    }

    virtual void Parameter3BtnClicked()
    {
        // Override and implement this function in CustomContainer2
    }

    virtual void Parameter4BtnClicked()
    {
        // Override and implement this function in CustomContainer2
    }

    virtual void Parameter5BtnClicked()
    {
        // Override and implement this function in CustomContainer2
    }

    virtual void Parameter6BtnClicked()
    {
        // Override and implement this function in CustomContainer2
    }

    virtual void Parameter7BtnClicked()
    {
        // Override and implement this function in CustomContainer2
    }

    virtual void Parameter8BtnClicked()
    {
        // Override and implement this function in CustomContainer2
    }

    virtual void Parameter9BtnClicked()
    {
        // Override and implement this function in CustomContainer2
    }

    virtual void Parameter10BtnClicked()
    {
        // Override and implement this function in CustomContainer2
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box2;
    touchgfx::Box box1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ParameterBtn1;
    touchgfx::TextAreaWithOneWildcard ParameterText1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ParameterBtn2;
    touchgfx::TextAreaWithOneWildcard ParameterText2;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ParameterBtn3;
    touchgfx::TextAreaWithOneWildcard ParameterText3;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ParameterBtn4;
    touchgfx::TextAreaWithOneWildcard ParameterText4;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ParameterBtn5;
    touchgfx::TextAreaWithOneWildcard ParameterText5;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ParameterBtn6;
    touchgfx::TextAreaWithOneWildcard ParameterText6;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ParameterBtn7;
    touchgfx::TextAreaWithOneWildcard ParameterText7;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ParameterBtn8;
    touchgfx::TextAreaWithOneWildcard ParameterText8;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ParameterBtn9;
    touchgfx::TextAreaWithOneWildcard ParameterText9;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > ParameterBtn10;
    touchgfx::TextAreaWithOneWildcard ParameterText10;
    touchgfx::TextArea Parameter1;
    touchgfx::TextArea Parameter6;
    touchgfx::TextArea Parameter2;
    touchgfx::TextArea Parameter3;
    touchgfx::TextArea Parameter8;
    touchgfx::TextArea Parameter4;
    touchgfx::TextArea Parameter9;
    touchgfx::TextArea Parameter5;
    touchgfx::TextArea Parameter10;
    touchgfx::TextArea Parameter7;
    touchgfx::TextArea CalibrationPageText;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > CalibrationExitBtn;
    touchgfx::Line ExitLine2;
    touchgfx::PainterRGB565 ExitLine2Painter;
    touchgfx::Line ExitLine1;
    touchgfx::PainterRGB565 ExitLine1Painter;

    /*
     * Wildcard Buffers
     */
    static const uint16_t PARAMETERTEXT1_SIZE = 6;
    touchgfx::Unicode::UnicodeChar ParameterText1Buffer[PARAMETERTEXT1_SIZE];
    static const uint16_t PARAMETERTEXT2_SIZE = 6;
    touchgfx::Unicode::UnicodeChar ParameterText2Buffer[PARAMETERTEXT2_SIZE];
    static const uint16_t PARAMETERTEXT3_SIZE = 6;
    touchgfx::Unicode::UnicodeChar ParameterText3Buffer[PARAMETERTEXT3_SIZE];
    static const uint16_t PARAMETERTEXT4_SIZE = 6;
    touchgfx::Unicode::UnicodeChar ParameterText4Buffer[PARAMETERTEXT4_SIZE];
    static const uint16_t PARAMETERTEXT5_SIZE = 6;
    touchgfx::Unicode::UnicodeChar ParameterText5Buffer[PARAMETERTEXT5_SIZE];
    static const uint16_t PARAMETERTEXT6_SIZE = 6;
    touchgfx::Unicode::UnicodeChar ParameterText6Buffer[PARAMETERTEXT6_SIZE];
    static const uint16_t PARAMETERTEXT7_SIZE = 6;
    touchgfx::Unicode::UnicodeChar ParameterText7Buffer[PARAMETERTEXT7_SIZE];
    static const uint16_t PARAMETERTEXT8_SIZE = 6;
    touchgfx::Unicode::UnicodeChar ParameterText8Buffer[PARAMETERTEXT8_SIZE];
    static const uint16_t PARAMETERTEXT9_SIZE = 6;
    touchgfx::Unicode::UnicodeChar ParameterText9Buffer[PARAMETERTEXT9_SIZE];
    static const uint16_t PARAMETERTEXT10_SIZE = 6;
    touchgfx::Unicode::UnicodeChar ParameterText10Buffer[PARAMETERTEXT10_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CustomContainer2Base, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // CUSTOMCONTAINER2BASE_HPP
